@model Aleris.Models.CompanySale

@{
    ViewData["Title"] = "Add Sale";
}

<div class="content">
    <h1>Добави Продажба</h1>

    <div asp-validation-summary="All" class="text-danger"></div>

    <form method="post" action="@Url.Action("AddSale", "Sales")">
        <input type="hidden" asp-for="CompanyId" value="@Model.CompanyId"/>

        <div class="form-group">
            <label for="productDropdown">Име на продукта</label>
            <select id="productDropdown" asp-for="ProductId" class="form-control" required>
                <option value="" disabled selected>Селектирай продукт</option>
                @foreach (var product in ViewBag.StorageProducts)
                {
                    <option value="@product.Id" data-name="@product.ProductName" data-unit="@product.UnitType" data-quantity="@product.Quantity">
                        @product.ProductName
                    </option>
                }
            </select>
        </div>

        <!-- Hidden inputs for Name and UnitType -->
        <input type="hidden" id="productNameField" asp-for="Name" />
        <input type="hidden" id="unitTypeField" asp-for="UnitType" />

        <div class="form-group">
            <label>Мерна единица:</label>
            <input id="unitTypeDisplay" class="form-control" readonly />
        </div>

        <div class="form-group">
            <label for="quantity">Количество</label>
            <input type="number" id="quantityField" name="Quantity" class="form-control" min="0.01" step="0.01" required />
            <span class="text-danger" id="quantityError"></span>
        </div>

        <div class="form-group">
            <label for="productPrice">Единична цена:</label>
            <input type="number" id="productPrice" name="ProductPrice" class="form-control" min="0.01" step="0.01" required />
        </div>

        <button type="submit" class="btn btn-success">Добави Продажба</button>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const productDropdown = document.getElementById("productDropdown");
        const unitTypeDisplay = document.getElementById("unitTypeDisplay");
        const quantityField = document.getElementById("quantityField");
        const quantityError = document.getElementById("quantityError");
        const productNameField = document.getElementById("productNameField");
        const unitTypeField = document.getElementById("unitTypeField");

        productDropdown.addEventListener("change", function () {
            const selectedOption = productDropdown.options[productDropdown.selectedIndex];
            const productName = selectedOption.dataset.name;
            const unitType = selectedOption.dataset.unit;
            const quantity = selectedOption.dataset.quantity;

            // Set values for hidden inputs
            productNameField.value = productName;
            unitTypeField.value = unitType;

            // Update display for unit type
            unitTypeDisplay.value = unitType;

            // Set max quantity based on selected product
            quantityField.max = quantity;
        });

        quantityField.addEventListener("input", function () {
            const maxQuantity = parseFloat(quantityField.max);
            if (parseFloat(quantityField.value) > maxQuantity) {
                quantityError.textContent = "Cannot exceed available stock!";
                quantityField.value = maxQuantity;
            } else {
                quantityError.textContent = "";
            }
        });
    });
</script>

<style>
    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .submit-button {
        padding: 10px 15px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .content {
        margin-left: 0px !important;
    }

    h1 {
        margin-bottom: 40px;
    }
</style>
